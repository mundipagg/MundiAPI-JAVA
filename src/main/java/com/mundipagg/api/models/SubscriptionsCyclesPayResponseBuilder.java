/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;
import org.joda.time.DateTime;

public class SubscriptionsCyclesPayResponseBuilder {
    //the instance to build
    private SubscriptionsCyclesPayResponse subscriptionsCyclesPayResponse;

    /**
     * Default constructor to initialize the instance
     */
    public SubscriptionsCyclesPayResponseBuilder() {
        subscriptionsCyclesPayResponse = new SubscriptionsCyclesPayResponse();
    }

    public SubscriptionsCyclesPayResponseBuilder id(String id) {
        subscriptionsCyclesPayResponse.setId(id);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder code(String code) {
        subscriptionsCyclesPayResponse.setCode(code);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder url(String url) {
        subscriptionsCyclesPayResponse.setUrl(url);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder amount(int amount) {
        subscriptionsCyclesPayResponse.setAmount(amount);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder status(String status) {
        subscriptionsCyclesPayResponse.setStatus(status);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder paymentMethod(String paymentMethod) {
        subscriptionsCyclesPayResponse.setPaymentMethod(paymentMethod);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder createdAt(DateTime createdAt) {
        subscriptionsCyclesPayResponse.setCreatedAt(createdAt);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder items(List<GetInvoiceItemResponse> items) {
        subscriptionsCyclesPayResponse.setItems(items);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder customer(Customer customer) {
        subscriptionsCyclesPayResponse.setCustomer(customer);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder charge(Charge charge) {
        subscriptionsCyclesPayResponse.setCharge(charge);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder installments(int installments) {
        subscriptionsCyclesPayResponse.setInstallments(installments);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder billingAddress(BillingAddress billingAddress) {
        subscriptionsCyclesPayResponse.setBillingAddress(billingAddress);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder subscription(GetSubscriptionResponse subscription) {
        subscriptionsCyclesPayResponse.setSubscription(subscription);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder cycle(Cycle cycle) {
        subscriptionsCyclesPayResponse.setCycle(cycle);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder shipping(Shipping shipping) {
        subscriptionsCyclesPayResponse.setShipping(shipping);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder metadata(LinkedHashMap<String, String> metadata) {
        subscriptionsCyclesPayResponse.setMetadata(metadata);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder dueAt(DateTime dueAt) {
        subscriptionsCyclesPayResponse.setDueAt(dueAt);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder canceledAt(DateTime canceledAt) {
        subscriptionsCyclesPayResponse.setCanceledAt(canceledAt);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder billingAt(DateTime billingAt) {
        subscriptionsCyclesPayResponse.setBillingAt(billingAt);
        return this;
    }

    public SubscriptionsCyclesPayResponseBuilder seenAt(DateTime seenAt) {
        subscriptionsCyclesPayResponse.setSeenAt(seenAt);
        return this;
    }

    /**
     * Total discounted value
     */
    public SubscriptionsCyclesPayResponseBuilder totalDiscount(Integer totalDiscount) {
        subscriptionsCyclesPayResponse.setTotalDiscount(totalDiscount);
        return this;
    }

    /**
     * Total discounted value
     */
    public SubscriptionsCyclesPayResponseBuilder totalIncrement(Integer totalIncrement) {
        subscriptionsCyclesPayResponse.setTotalIncrement(totalIncrement);
        return this;
    }

    /**
     * Subscription Id
     */
    public SubscriptionsCyclesPayResponseBuilder subscriptionId(String subscriptionId) {
        subscriptionsCyclesPayResponse.setSubscriptionId(subscriptionId);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public SubscriptionsCyclesPayResponse build() {
        return subscriptionsCyclesPayResponse;
    }
}