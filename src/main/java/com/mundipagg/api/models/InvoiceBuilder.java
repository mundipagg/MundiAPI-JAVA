/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;
import org.joda.time.DateTime;

public class InvoiceBuilder {
    //the instance to build
    private Invoice invoice;

    /**
     * Default constructor to initialize the instance
     */
    public InvoiceBuilder() {
        invoice = new Invoice();
    }

    public InvoiceBuilder id(String id) {
        invoice.setId(id);
        return this;
    }

    public InvoiceBuilder code(String code) {
        invoice.setCode(code);
        return this;
    }

    public InvoiceBuilder url(String url) {
        invoice.setUrl(url);
        return this;
    }

    public InvoiceBuilder amount(int amount) {
        invoice.setAmount(amount);
        return this;
    }

    public InvoiceBuilder status(String status) {
        invoice.setStatus(status);
        return this;
    }

    public InvoiceBuilder paymentMethod(String paymentMethod) {
        invoice.setPaymentMethod(paymentMethod);
        return this;
    }

    public InvoiceBuilder createdAt(DateTime createdAt) {
        invoice.setCreatedAt(createdAt);
        return this;
    }

    public InvoiceBuilder items(List<GetInvoiceItemResponse> items) {
        invoice.setItems(items);
        return this;
    }

    public InvoiceBuilder customer(Customer customer) {
        invoice.setCustomer(customer);
        return this;
    }

    public InvoiceBuilder charge(Charge charge) {
        invoice.setCharge(charge);
        return this;
    }

    public InvoiceBuilder installments(int installments) {
        invoice.setInstallments(installments);
        return this;
    }

    public InvoiceBuilder billingAddress(BillingAddress billingAddress) {
        invoice.setBillingAddress(billingAddress);
        return this;
    }

    public InvoiceBuilder subscription(GetSubscriptionResponse subscription) {
        invoice.setSubscription(subscription);
        return this;
    }

    public InvoiceBuilder cycle(Cycle cycle) {
        invoice.setCycle(cycle);
        return this;
    }

    public InvoiceBuilder shipping(Shipping shipping) {
        invoice.setShipping(shipping);
        return this;
    }

    public InvoiceBuilder metadata(LinkedHashMap<String, String> metadata) {
        invoice.setMetadata(metadata);
        return this;
    }

    public InvoiceBuilder dueAt(DateTime dueAt) {
        invoice.setDueAt(dueAt);
        return this;
    }

    public InvoiceBuilder canceledAt(DateTime canceledAt) {
        invoice.setCanceledAt(canceledAt);
        return this;
    }

    public InvoiceBuilder billingAt(DateTime billingAt) {
        invoice.setBillingAt(billingAt);
        return this;
    }

    public InvoiceBuilder seenAt(DateTime seenAt) {
        invoice.setSeenAt(seenAt);
        return this;
    }

    /**
     * Total discounted value
     */
    public InvoiceBuilder totalDiscount(Integer totalDiscount) {
        invoice.setTotalDiscount(totalDiscount);
        return this;
    }

    /**
     * Total discounted value
     */
    public InvoiceBuilder totalIncrement(Integer totalIncrement) {
        invoice.setTotalIncrement(totalIncrement);
        return this;
    }

    /**
     * Subscription Id
     */
    public InvoiceBuilder subscriptionId(String subscriptionId) {
        invoice.setSubscriptionId(subscriptionId);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Invoice build() {
        return invoice;
    }
}