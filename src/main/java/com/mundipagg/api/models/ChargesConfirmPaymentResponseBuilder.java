/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;
import org.joda.time.DateTime;

public class ChargesConfirmPaymentResponseBuilder {
    //the instance to build
    private ChargesConfirmPaymentResponse chargesConfirmPaymentResponse;

    /**
     * Default constructor to initialize the instance
     */
    public ChargesConfirmPaymentResponseBuilder() {
        chargesConfirmPaymentResponse = new ChargesConfirmPaymentResponse();
    }

    public ChargesConfirmPaymentResponseBuilder id(String id) {
        chargesConfirmPaymentResponse.setId(id);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder code(String code) {
        chargesConfirmPaymentResponse.setCode(code);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder gatewayId(String gatewayId) {
        chargesConfirmPaymentResponse.setGatewayId(gatewayId);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder amount(int amount) {
        chargesConfirmPaymentResponse.setAmount(amount);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder status(String status) {
        chargesConfirmPaymentResponse.setStatus(status);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder currency(String currency) {
        chargesConfirmPaymentResponse.setCurrency(currency);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder paymentMethod(String paymentMethod) {
        chargesConfirmPaymentResponse.setPaymentMethod(paymentMethod);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder dueAt(DateTime dueAt) {
        chargesConfirmPaymentResponse.setDueAt(dueAt);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder createdAt(DateTime createdAt) {
        chargesConfirmPaymentResponse.setCreatedAt(createdAt);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder updatedAt(DateTime updatedAt) {
        chargesConfirmPaymentResponse.setUpdatedAt(updatedAt);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder lastTransaction(GetTransactionResponse lastTransaction) {
        chargesConfirmPaymentResponse.setLastTransaction(lastTransaction);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder invoice(Invoice invoice) {
        chargesConfirmPaymentResponse.setInvoice(invoice);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder order(Order order) {
        chargesConfirmPaymentResponse.setOrder(order);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder customer(Customer customer) {
        chargesConfirmPaymentResponse.setCustomer(customer);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder metadata(LinkedHashMap<String, String> metadata) {
        chargesConfirmPaymentResponse.setMetadata(metadata);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder paidAt(DateTime paidAt) {
        chargesConfirmPaymentResponse.setPaidAt(paidAt);
        return this;
    }

    public ChargesConfirmPaymentResponseBuilder canceledAt(DateTime canceledAt) {
        chargesConfirmPaymentResponse.setCanceledAt(canceledAt);
        return this;
    }

    /**
     * Canceled Amount
     */
    public ChargesConfirmPaymentResponseBuilder canceledAmount(int canceledAmount) {
        chargesConfirmPaymentResponse.setCanceledAmount(canceledAmount);
        return this;
    }

    /**
     * Paid amount
     */
    public ChargesConfirmPaymentResponseBuilder paidAmount(int paidAmount) {
        chargesConfirmPaymentResponse.setPaidAmount(paidAmount);
        return this;
    }

    /**
     * Defines whether the card has been used one or more times.
     */
    public ChargesConfirmPaymentResponseBuilder recurrencyCycle(String recurrencyCycle) {
        chargesConfirmPaymentResponse.setRecurrencyCycle(recurrencyCycle);
        return this;
    }

    /**
     * interest and fine paid
     */
    public ChargesConfirmPaymentResponseBuilder interestAndFinePaid(Integer interestAndFinePaid) {
        chargesConfirmPaymentResponse.setInterestAndFinePaid(interestAndFinePaid);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public ChargesConfirmPaymentResponse build() {
        return chargesConfirmPaymentResponse;
    }
}