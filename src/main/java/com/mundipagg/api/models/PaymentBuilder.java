/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;

public class PaymentBuilder {
    //the instance to build
    private Payment payment;

    /**
     * Default constructor to initialize the instance
     */
    public PaymentBuilder() {
        payment = new Payment();
    }

    /**
     * Payment method
     */
    public PaymentBuilder paymentMethod(String paymentMethod) {
        payment.setPaymentMethod(paymentMethod);
        return this;
    }

    public PaymentBuilder creditCard(CreditCard1 creditCard) {
        payment.setCreditCard(creditCard);
        return this;
    }

    public PaymentBuilder debitCard(DebitCard1 debitCard) {
        payment.setDebitCard(debitCard);
        return this;
    }

    public PaymentBuilder boleto(Boleto1 boleto) {
        payment.setBoleto(boleto);
        return this;
    }

    /**
     * Currency. Must be informed using 3 characters
     */
    public PaymentBuilder currency(String currency) {
        payment.setCurrency(currency);
        return this;
    }

    public PaymentBuilder voucher(Voucher voucher) {
        payment.setVoucher(voucher);
        return this;
    }

    /**
     * Splits
     */
    public PaymentBuilder split(List<CreateSplitRequest> split) {
        payment.setSplit(split);
        return this;
    }

    public PaymentBuilder bankTransfer(BankTransfer1 bankTransfer) {
        payment.setBankTransfer(bankTransfer);
        return this;
    }

    /**
     * Gateway affiliation code
     */
    public PaymentBuilder gatewayAffiliationId(String gatewayAffiliationId) {
        payment.setGatewayAffiliationId(gatewayAffiliationId);
        return this;
    }

    /**
     * The amount of the payment, in cents
     */
    public PaymentBuilder amount(Integer amount) {
        payment.setAmount(amount);
        return this;
    }

    public PaymentBuilder checkout(Checkout checkout) {
        payment.setCheckout(checkout);
        return this;
    }

    /**
     * Customer Id
     */
    public PaymentBuilder customerId(String customerId) {
        payment.setCustomerId(customerId);
        return this;
    }

    public PaymentBuilder customer(Customer8 customer) {
        payment.setCustomer(customer);
        return this;
    }

    /**
     * Metadata
     */
    public PaymentBuilder metadata(LinkedHashMap<String, String> metadata) {
        payment.setMetadata(metadata);
        return this;
    }

    public PaymentBuilder cash(CreateCashPaymentRequest cash) {
        payment.setCash(cash);
        return this;
    }

    public PaymentBuilder privateLabel(PrivateLabel privateLabel) {
        payment.setPrivateLabel(privateLabel);
        return this;
    }

    public PaymentBuilder pix(Pix pix) {
        payment.setPix(pix);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Payment build() {
        return payment;
    }
}