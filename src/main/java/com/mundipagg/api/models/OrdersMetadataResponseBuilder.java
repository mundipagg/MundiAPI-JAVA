/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;
import org.joda.time.DateTime;

public class OrdersMetadataResponseBuilder {
    //the instance to build
    private OrdersMetadataResponse ordersMetadataResponse;

    /**
     * Default constructor to initialize the instance
     */
    public OrdersMetadataResponseBuilder() {
        ordersMetadataResponse = new OrdersMetadataResponse();
    }

    public OrdersMetadataResponseBuilder id(String id) {
        ordersMetadataResponse.setId(id);
        return this;
    }

    public OrdersMetadataResponseBuilder code(String code) {
        ordersMetadataResponse.setCode(code);
        return this;
    }

    public OrdersMetadataResponseBuilder currency(String currency) {
        ordersMetadataResponse.setCurrency(currency);
        return this;
    }

    public OrdersMetadataResponseBuilder items(List<GetOrderItemResponse> items) {
        ordersMetadataResponse.setItems(items);
        return this;
    }

    public OrdersMetadataResponseBuilder customer(Customer customer) {
        ordersMetadataResponse.setCustomer(customer);
        return this;
    }

    public OrdersMetadataResponseBuilder status(String status) {
        ordersMetadataResponse.setStatus(status);
        return this;
    }

    public OrdersMetadataResponseBuilder createdAt(DateTime createdAt) {
        ordersMetadataResponse.setCreatedAt(createdAt);
        return this;
    }

    public OrdersMetadataResponseBuilder updatedAt(DateTime updatedAt) {
        ordersMetadataResponse.setUpdatedAt(updatedAt);
        return this;
    }

    public OrdersMetadataResponseBuilder charges(List<GetChargeResponse> charges) {
        ordersMetadataResponse.setCharges(charges);
        return this;
    }

    public OrdersMetadataResponseBuilder invoiceUrl(String invoiceUrl) {
        ordersMetadataResponse.setInvoiceUrl(invoiceUrl);
        return this;
    }

    public OrdersMetadataResponseBuilder shipping(Shipping shipping) {
        ordersMetadataResponse.setShipping(shipping);
        return this;
    }

    public OrdersMetadataResponseBuilder metadata(LinkedHashMap<String, String> metadata) {
        ordersMetadataResponse.setMetadata(metadata);
        return this;
    }

    /**
     * Checkout Payment Settings Response
     */
    public OrdersMetadataResponseBuilder checkouts(List<GetCheckoutPaymentResponse> checkouts) {
        ordersMetadataResponse.setCheckouts(checkouts);
        return this;
    }

    /**
     * Ip address
     */
    public OrdersMetadataResponseBuilder ip(String ip) {
        ordersMetadataResponse.setIp(ip);
        return this;
    }

    /**
     * Session id
     */
    public OrdersMetadataResponseBuilder sessionId(String sessionId) {
        ordersMetadataResponse.setSessionId(sessionId);
        return this;
    }

    public OrdersMetadataResponseBuilder location(Location location) {
        ordersMetadataResponse.setLocation(location);
        return this;
    }

    public OrdersMetadataResponseBuilder device(Device device) {
        ordersMetadataResponse.setDevice(device);
        return this;
    }

    /**
     * Indicates whether the order is closed
     */
    public OrdersMetadataResponseBuilder closed(boolean closed) {
        ordersMetadataResponse.setClosed(closed);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public OrdersMetadataResponse build() {
        return ordersMetadataResponse;
    }
}