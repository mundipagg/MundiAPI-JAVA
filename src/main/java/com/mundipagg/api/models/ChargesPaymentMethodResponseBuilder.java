/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;
import org.joda.time.DateTime;

public class ChargesPaymentMethodResponseBuilder {
    //the instance to build
    private ChargesPaymentMethodResponse chargesPaymentMethodResponse;

    /**
     * Default constructor to initialize the instance
     */
    public ChargesPaymentMethodResponseBuilder() {
        chargesPaymentMethodResponse = new ChargesPaymentMethodResponse();
    }

    public ChargesPaymentMethodResponseBuilder id(String id) {
        chargesPaymentMethodResponse.setId(id);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder code(String code) {
        chargesPaymentMethodResponse.setCode(code);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder gatewayId(String gatewayId) {
        chargesPaymentMethodResponse.setGatewayId(gatewayId);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder amount(int amount) {
        chargesPaymentMethodResponse.setAmount(amount);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder status(String status) {
        chargesPaymentMethodResponse.setStatus(status);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder currency(String currency) {
        chargesPaymentMethodResponse.setCurrency(currency);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder paymentMethod(String paymentMethod) {
        chargesPaymentMethodResponse.setPaymentMethod(paymentMethod);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder dueAt(DateTime dueAt) {
        chargesPaymentMethodResponse.setDueAt(dueAt);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder createdAt(DateTime createdAt) {
        chargesPaymentMethodResponse.setCreatedAt(createdAt);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder updatedAt(DateTime updatedAt) {
        chargesPaymentMethodResponse.setUpdatedAt(updatedAt);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder lastTransaction(GetTransactionResponse lastTransaction) {
        chargesPaymentMethodResponse.setLastTransaction(lastTransaction);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder invoice(Invoice invoice) {
        chargesPaymentMethodResponse.setInvoice(invoice);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder order(Order order) {
        chargesPaymentMethodResponse.setOrder(order);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder customer(Customer customer) {
        chargesPaymentMethodResponse.setCustomer(customer);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder metadata(LinkedHashMap<String, String> metadata) {
        chargesPaymentMethodResponse.setMetadata(metadata);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder paidAt(DateTime paidAt) {
        chargesPaymentMethodResponse.setPaidAt(paidAt);
        return this;
    }

    public ChargesPaymentMethodResponseBuilder canceledAt(DateTime canceledAt) {
        chargesPaymentMethodResponse.setCanceledAt(canceledAt);
        return this;
    }

    /**
     * Canceled Amount
     */
    public ChargesPaymentMethodResponseBuilder canceledAmount(int canceledAmount) {
        chargesPaymentMethodResponse.setCanceledAmount(canceledAmount);
        return this;
    }

    /**
     * Paid amount
     */
    public ChargesPaymentMethodResponseBuilder paidAmount(int paidAmount) {
        chargesPaymentMethodResponse.setPaidAmount(paidAmount);
        return this;
    }

    /**
     * Defines whether the card has been used one or more times.
     */
    public ChargesPaymentMethodResponseBuilder recurrencyCycle(String recurrencyCycle) {
        chargesPaymentMethodResponse.setRecurrencyCycle(recurrencyCycle);
        return this;
    }

    /**
     * interest and fine paid
     */
    public ChargesPaymentMethodResponseBuilder interestAndFinePaid(Integer interestAndFinePaid) {
        chargesPaymentMethodResponse.setInterestAndFinePaid(interestAndFinePaid);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public ChargesPaymentMethodResponse build() {
        return chargesPaymentMethodResponse;
    }
}