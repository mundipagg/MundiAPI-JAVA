/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;

public class Card1Builder {
    //the instance to build
    private Card1 card1;

    /**
     * Default constructor to initialize the instance
     */
    public Card1Builder() {
        card1 = new Card1();
    }

    /**
     * Credit card number
     */
    public Card1Builder number(String number) {
        card1.setNumber(number);
        return this;
    }

    /**
     * Holder name, as written on the card
     */
    public Card1Builder holderName(String holderName) {
        card1.setHolderName(holderName);
        return this;
    }

    /**
     * The expiration month
     */
    public Card1Builder expMonth(int expMonth) {
        card1.setExpMonth(expMonth);
        return this;
    }

    /**
     * The expiration year, that can be informed with 2 or 4 digits
     */
    public Card1Builder expYear(int expYear) {
        card1.setExpYear(expYear);
        return this;
    }

    /**
     * The card's security code
     */
    public Card1Builder cvv(String cvv) {
        card1.setCvv(cvv);
        return this;
    }

    public Card1Builder billingAddress(BillingAddress1 billingAddress) {
        card1.setBillingAddress(billingAddress);
        return this;
    }

    /**
     * Card brand
     */
    public Card1Builder brand(String brand) {
        card1.setBrand(brand);
        return this;
    }

    /**
     * The address id for the billing address
     */
    public Card1Builder billingAddressId(String billingAddressId) {
        card1.setBillingAddressId(billingAddressId);
        return this;
    }

    /**
     * Metadata
     */
    public Card1Builder metadata(LinkedHashMap<String, String> metadata) {
        card1.setMetadata(metadata);
        return this;
    }

    /**
     * Card type
     */
    public Card1Builder type(String type) {
        card1.setType(type);
        return this;
    }

    public Card1Builder options(Options1 options) {
        card1.setOptions(options);
        return this;
    }

    /**
     * Document number for the card's holder
     */
    public Card1Builder holderDocument(String holderDocument) {
        card1.setHolderDocument(holderDocument);
        return this;
    }

    /**
     * Indicates whether it is a private label card
     */
    public Card1Builder privateLabel(boolean privateLabel) {
        card1.setPrivateLabel(privateLabel);
        return this;
    }

    public Card1Builder label(String label) {
        card1.setLabel(label);
        return this;
    }

    /**
     * Identifier
     */
    public Card1Builder id(String id) {
        card1.setId(id);
        return this;
    }

    /**
     * token identifier
     */
    public Card1Builder token(String token) {
        card1.setToken(token);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Card1 build() {
        return card1;
    }
}