/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;
import org.joda.time.DateTime;

public class OrderBuilder {
    //the instance to build
    private Order order;

    /**
     * Default constructor to initialize the instance
     */
    public OrderBuilder() {
        order = new Order();
    }

    public OrderBuilder id(String id) {
        order.setId(id);
        return this;
    }

    public OrderBuilder code(String code) {
        order.setCode(code);
        return this;
    }

    public OrderBuilder currency(String currency) {
        order.setCurrency(currency);
        return this;
    }

    public OrderBuilder items(List<GetOrderItemResponse> items) {
        order.setItems(items);
        return this;
    }

    public OrderBuilder customer(Customer customer) {
        order.setCustomer(customer);
        return this;
    }

    public OrderBuilder status(String status) {
        order.setStatus(status);
        return this;
    }

    public OrderBuilder createdAt(DateTime createdAt) {
        order.setCreatedAt(createdAt);
        return this;
    }

    public OrderBuilder updatedAt(DateTime updatedAt) {
        order.setUpdatedAt(updatedAt);
        return this;
    }

    public OrderBuilder charges(List<GetChargeResponse> charges) {
        order.setCharges(charges);
        return this;
    }

    public OrderBuilder invoiceUrl(String invoiceUrl) {
        order.setInvoiceUrl(invoiceUrl);
        return this;
    }

    public OrderBuilder shipping(Shipping shipping) {
        order.setShipping(shipping);
        return this;
    }

    public OrderBuilder metadata(LinkedHashMap<String, String> metadata) {
        order.setMetadata(metadata);
        return this;
    }

    /**
     * Checkout Payment Settings Response
     */
    public OrderBuilder checkouts(List<GetCheckoutPaymentResponse> checkouts) {
        order.setCheckouts(checkouts);
        return this;
    }

    /**
     * Ip address
     */
    public OrderBuilder ip(String ip) {
        order.setIp(ip);
        return this;
    }

    /**
     * Session id
     */
    public OrderBuilder sessionId(String sessionId) {
        order.setSessionId(sessionId);
        return this;
    }

    public OrderBuilder location(Location location) {
        order.setLocation(location);
        return this;
    }

    public OrderBuilder device(Device device) {
        order.setDevice(device);
        return this;
    }

    /**
     * Indicates whether the order is closed
     */
    public OrderBuilder closed(boolean closed) {
        order.setClosed(closed);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Order build() {
        return order;
    }
}