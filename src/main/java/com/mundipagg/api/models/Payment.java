/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@JsonInclude(Include.ALWAYS)
public class Payment 
        implements java.io.Serializable {
    private static final long serialVersionUID = 1714325373861410L;
    private String paymentMethod;
    private CreditCard1 creditCard;
    private DebitCard1 debitCard;
    private Boleto1 boleto;
    private String currency;
    private Voucher voucher;
    private List<CreateSplitRequest> split;
    private BankTransfer1 bankTransfer;
    private String gatewayAffiliationId;
    private Integer amount;
    private Checkout checkout;
    private String customerId;
    private Customer8 customer;
    private LinkedHashMap<String, String> metadata;
    private CreateCashPaymentRequest cash;
    private PrivateLabel privateLabel;
    private Pix pix;
    /** GETTER
     * Payment method
     */
    @JsonGetter("payment_method")
    public String getPaymentMethod ( ) { 
        return this.paymentMethod;
    }
    
    /** SETTER
     * Payment method
     */
    @JsonSetter("payment_method")
    public void setPaymentMethod (String value) { 
        this.paymentMethod = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("credit_card")
    public CreditCard1 getCreditCard ( ) { 
        return this.creditCard;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("credit_card")
    public void setCreditCard (CreditCard1 value) { 
        this.creditCard = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("debit_card")
    public DebitCard1 getDebitCard ( ) { 
        return this.debitCard;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("debit_card")
    public void setDebitCard (DebitCard1 value) { 
        this.debitCard = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("boleto")
    public Boleto1 getBoleto ( ) { 
        return this.boleto;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("boleto")
    public void setBoleto (Boleto1 value) { 
        this.boleto = value;
    }
 
    /** GETTER
     * Currency. Must be informed using 3 characters
     */
    @JsonGetter("currency")
    public String getCurrency ( ) { 
        return this.currency;
    }
    
    /** SETTER
     * Currency. Must be informed using 3 characters
     */
    @JsonSetter("currency")
    public void setCurrency (String value) { 
        this.currency = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("voucher")
    public Voucher getVoucher ( ) { 
        return this.voucher;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("voucher")
    public void setVoucher (Voucher value) { 
        this.voucher = value;
    }
 
    /** GETTER
     * Splits
     */
    @JsonGetter("split")
    public List<CreateSplitRequest> getSplit ( ) { 
        return this.split;
    }
    
    /** SETTER
     * Splits
     */
    @JsonSetter("split")
    public void setSplit (List<CreateSplitRequest> value) { 
        this.split = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("bank_transfer")
    public BankTransfer1 getBankTransfer ( ) { 
        return this.bankTransfer;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("bank_transfer")
    public void setBankTransfer (BankTransfer1 value) { 
        this.bankTransfer = value;
    }
 
    /** GETTER
     * Gateway affiliation code
     */
    @JsonGetter("gateway_affiliation_id")
    public String getGatewayAffiliationId ( ) { 
        return this.gatewayAffiliationId;
    }
    
    /** SETTER
     * Gateway affiliation code
     */
    @JsonSetter("gateway_affiliation_id")
    public void setGatewayAffiliationId (String value) { 
        this.gatewayAffiliationId = value;
    }
 
    /** GETTER
     * The amount of the payment, in cents
     */
    @JsonGetter("amount")
    public Integer getAmount ( ) { 
        return this.amount;
    }
    
    /** SETTER
     * The amount of the payment, in cents
     */
    @JsonSetter("amount")
    public void setAmount (Integer value) { 
        this.amount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("checkout")
    public Checkout getCheckout ( ) { 
        return this.checkout;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("checkout")
    public void setCheckout (Checkout value) { 
        this.checkout = value;
    }
 
    /** GETTER
     * Customer Id
     */
    @JsonGetter("customer_id")
    public String getCustomerId ( ) { 
        return this.customerId;
    }
    
    /** SETTER
     * Customer Id
     */
    @JsonSetter("customer_id")
    public void setCustomerId (String value) { 
        this.customerId = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("customer")
    public Customer8 getCustomer ( ) { 
        return this.customer;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("customer")
    public void setCustomer (Customer8 value) { 
        this.customer = value;
    }
 
    /** GETTER
     * Metadata
     */
    @JsonGetter("metadata")
    public LinkedHashMap<String, String> getMetadata ( ) { 
        return this.metadata;
    }
    
    /** SETTER
     * Metadata
     */
    @JsonSetter("metadata")
    public void setMetadata (LinkedHashMap<String, String> value) { 
        this.metadata = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("cash")
    public CreateCashPaymentRequest getCash ( ) { 
        return this.cash;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("cash")
    public void setCash (CreateCashPaymentRequest value) { 
        this.cash = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("private_label")
    public PrivateLabel getPrivateLabel ( ) { 
        return this.privateLabel;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("private_label")
    public void setPrivateLabel (PrivateLabel value) { 
        this.privateLabel = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("pix")
    public Pix getPix ( ) { 
        return this.pix;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("pix")
    public void setPix (Pix value) { 
        this.pix = value;
    }
 
}
